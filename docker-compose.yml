services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    restart: always
      #script:
      #build:
      #context: .
      #dockerfile: dockerfilescript
      #restart: always
      #volumes: 
      #- ./data:/home
      #depends_on:
      #- app
      #environment:
      #POSTGRES_DB: ${DB_NAME}
      #POSTGRES_USER: ${DB_USER}
      #POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}  
      #working_dir: /home
  node:
    image: prom/node-exporter
    container_name: node_exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    ports:
      - 9100:9100
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
  app:
    build:
      context: .
      dockerfile: dockerfilescript
    restart: always
    ports:
      - ${APP_PORT}:80
    depends_on:
      - redis
      - db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./data:/var/www/html
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    restart: unless-stopped
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${ADMIN_PASS}
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      - loki
  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
  promtail:
    image: grafana/promtail:3.4.1
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/log:/var/log:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
volumes:
  prometheus_data:
  grafana_data:

